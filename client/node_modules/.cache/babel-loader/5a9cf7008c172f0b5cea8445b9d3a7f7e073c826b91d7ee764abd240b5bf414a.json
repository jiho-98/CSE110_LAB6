{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dudwl\\\\CseLab5\\\\client\\\\src\\\\context\\\\AppContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { fetchExpenses } from \"../utils/expense-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  expenses: [],\n  setExpenses: () => {},\n  budget: 1000,\n  setBudget: () => {}\n};\nexport const AppContext = /*#__PURE__*/createContext(initialState);\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [expenses, setExpenses] = useState(initialState.expenses);\n  const [budget, setBudget] = useState(initialState.budget);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadExpenses = async () => {\n      try {\n        const expenseList = await fetchExpenses();\n        setExpenses(expenseList);\n      } catch (error) {\n        console.error(\"Failed to load expenses:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadExpenses();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      expenses,\n      setExpenses,\n      budget,\n      setBudget\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading expenses...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 18\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"AlmVREL4LcBcWGn2QOngeUt2HNg=\");\n_c = AppProvider;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","fetchExpenses","jsxDEV","_jsxDEV","initialState","expenses","setExpenses","budget","setBudget","AppContext","AppProvider","children","_s","loading","setLoading","loadExpenses","expenseList","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dudwl/CseLab5/client/src/context/AppContext.tsx"],"sourcesContent":["import React, { createContext, useState, useEffect, ReactNode } from \"react\";\r\nimport { Expense } from \"../types/types\";\r\nimport { fetchExpenses } from \"../utils/expense-utils\"; \r\n\r\ninterface AppContextType {\r\n  expenses: Expense[];\r\n  setExpenses: React.Dispatch<React.SetStateAction<Expense[]>>;\r\n  budget: number;\r\n  setBudget: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\ninterface AppProviderProps {\r\n  children: ReactNode; // children의 타입을 명시적으로 정의\r\n}\r\n\r\nconst initialState: AppContextType = {\r\n  expenses: [],\r\n  setExpenses: () => {},\r\n  budget: 1000,\r\n  setBudget: () => {},\r\n};\r\n\r\nexport const AppContext = createContext<AppContextType>(initialState);\r\n\r\nexport const AppProvider: React.FC<AppProviderProps> = ({ children }) => {\r\n  const [expenses, setExpenses] = useState<Expense[]>(initialState.expenses);\r\n  const [budget, setBudget] = useState<number>(initialState.budget);\r\n  const [loading, setLoading] = useState(true); \r\n\r\n  useEffect(() => {\r\n    const loadExpenses = async () => {\r\n      try {\r\n        const expenseList = await fetchExpenses();\r\n        setExpenses(expenseList);\r\n      } catch (error) {\r\n        console.error(\"Failed to load expenses:\", error);\r\n      } finally {\r\n        setLoading(false); \r\n      }\r\n    };\r\n\r\n    loadExpenses();\r\n  }, []);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        expenses,\r\n        setExpenses,\r\n        budget,\r\n        setBudget,\r\n      }}\r\n    >\r\n      {loading ? <p>Loading expenses...</p> : children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAE5E,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAavD,MAAMC,YAA4B,GAAG;EACnCC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;EACrBC,MAAM,EAAE,IAAI;EACZC,SAAS,EAAEA,CAAA,KAAM,CAAC;AACpB,CAAC;AAED,OAAO,MAAMC,UAAU,gBAAGX,aAAa,CAAiBM,YAAY,CAAC;AAErE,OAAO,MAAMM,WAAuC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAM,CAACP,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAYK,YAAY,CAACC,QAAQ,CAAC;EAC1E,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAASK,YAAY,CAACG,MAAM,CAAC;EACjE,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,WAAW,GAAG,MAAMf,aAAa,CAAC,CAAC;QACzCK,WAAW,CAACU,WAAW,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,SAAS;QACRH,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA,CAACM,UAAU,CAACU,QAAQ;IAClBC,KAAK,EAAE;MACLf,QAAQ;MACRC,WAAW;MACXC,MAAM;MACNC;IACF,CAAE;IAAAG,QAAA,EAEDE,OAAO,gBAAGV,OAAA;MAAAQ,QAAA,EAAG;IAAmB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAGb;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAE1B,CAAC;AAACZ,EAAA,CAhCWF,WAAuC;AAAAe,EAAA,GAAvCf,WAAuC;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}